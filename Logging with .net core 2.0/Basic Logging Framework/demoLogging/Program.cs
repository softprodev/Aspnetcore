using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Threading.Tasks;
using Microsoft.AspNetCore;
using Microsoft.AspNetCore.Hosting;
using Microsoft.Extensions.Configuration;
using Microsoft.Extensions.Logging;

namespace demoLogging
{
    public class Program
    {
        /// <summary>
        /// Default generated by Template
        /// </summary>
        /// <param name="args"></param>
        public static void Main(string[] args)
        {
            BuildWebHost(args).Run();
        }

        /// <summary>
        /// Default generated by Template
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        //public static IWebHost BuildWebHost(string[] args) =>
        //    WebHost.CreateDefaultBuilder(args)
        //        .UseStartup<Startup>()
        //        .Build();

        /// <summary>
        /// Default generated by Template
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        public static IWebHost BuildWebHost(string[] args) =>
            WebHost.CreateDefaultBuilder(args)
                .ConfigureLogging((hostingContext, logging) =>
                {
                    logging.AddConsole(options => options.IncludeScopes = true);
                    logging.AddDebug();
                })
                .UseStartup<Startup>()
                .Build();

        /// <summary>
        /// Filter rules using JSON file
        /// </summary>
        /// <param name="args"></param>

        //public static void Main(string[] args)
        //{
        //    var webHost = new WebHostBuilder()
        //        .UseKestrel()
        //        .UseContentRoot(Directory.GetCurrentDirectory())
        //        .ConfigureAppConfiguration((hostingContext, config) =>
        //        {
        //            var env = hostingContext.HostingEnvironment;
        //            config.AddJsonFile("appsettings.json", optional: true, reloadOnChange: true)
        //                    .AddJsonFile($"appsettings.{env.EnvironmentName}.json", optional: true, reloadOnChange: true);
        //            config.AddEnvironmentVariables();
        //        })
        //        .ConfigureLogging((hostingContext, logging) =>
        //        {
        //            logging.AddConfiguration(hostingContext.Configuration.GetSection("Logging"));
        //            logging.AddConsole();
        //            logging.AddDebug();
        //        })
        //        .UseStartup<Startup>()
        //        .Build();

        //    webHost.Run();
        //}

        /// <summary>
        /// Filter rules in Code
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        //public static IWebHost BuildWebHost(string[] args) =>
        //    WebHost.CreateDefaultBuilder(args)
        //        .ConfigureLogging(logging =>
        //            logging.AddFilter("System", LogLevel.Debug)
        //               .AddFilter<Microsoft.Extensions.Logging.Debug.DebugLoggerProvider>("Microsoft", LogLevel.Trace)
        //             )
        //        .UseStartup<Startup>()
        //        .Build();


        /// <summary>
        /// Set Minimum Level
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        //public static IWebHost BuildWebHost(string[] args) =>
        //    WebHost.CreateDefaultBuilder(args)
        //        .ConfigureLogging(logging => logging.SetMinimumLevel(LogLevel.Warning))
        //        .UseStartup<Startup>()
        //        .Build();

        /// <summary>
        /// Filter Function
        /// </summary>
        /// <param name="args"></param>
        /// <returns></returns>
        //public static IWebHost BuildWebHost(string[] args) =>
        //WebHost.CreateDefaultBuilder(args)
        //    .UseStartup<Startup>()
        //    .ConfigureLogging(logBuilder =>
        //    {
        //        logBuilder.AddFilter((provider, category, logLevel) =>
        //        {
        //            if (provider == "Microsoft.Extensions.Logging.Console.ConsoleLoggerProvider" &&
        //                category == "demoLogging.Controllers.HomeController")
        //            {
        //                return false;
        //            }
        //            return true;
        //        });
        //    })
        //    .Build();
    }
}
